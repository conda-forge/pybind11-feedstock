{% set version = "2.13.6" %}
{% set sha256 = "e08cb87f4773da97fa7b5f035de8763abc656d87d5773e62f6da0587d1f0ec20" %}

package:
  name: pybind11-split
  version: {{ version }}

source:
  fn: pybind11-{{ version }}.tar.gz
  url: https://github.com/pybind/pybind11/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 2
  noarch: python

requirements:
  host:
    # ensure we make python a top level job
    - python

outputs:
  - name: pybind11-abi
    version: {{ abi_version }}
    build:
      noarch: generic
      run_exports:
        - pybind11-abi =={{ abi_version }}
    requirements:
      run:
        - __unix   # [unix]
        - __win    # [win]
        - python >=3.12  # [abi_version == 5 or win]
        - python <3.12   # [abi_version == 4 and unix]
      run_constrained:
        - pybind11-global {{ version }}
        - pybind11 {{ version }}
    test:
      source_files:
        - include/pybind11/detail/internals.h
      files:
        - test-pybind11-abi.sh
      commands:
        - bash test-pybind11-abi.sh {{ abi_version }}  # [unix]

  - name: pybind11-global
    script: build-pybind11-global.sh  # [unix]
    script: build-pybind11-global.bat  # [win]
    build:
      noarch: python
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cmake
        - make  # [unix]
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - python
        - pip
        - setuptools
      run:
        - python
        # layouts are different on unix vs win
        - __unix        # [unix]
        - __win         # [win]
    test:
      commands:
        - echo "works!"

  - name: pybind11
    script: build-pybind11.sh  # [unix]
    script: build-pybind11.bat  # [win]
    build:
      noarch: python
      entry_points:
        - pybind11-config = pybind11.__main__:main
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cmake
        - make  # [unix]
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - python
        - pip
        - setuptools
      run:
        - python
        - pybind11-global {{ PKG_VERSION }}=*_{{ PKG_BUILDNUM }}
    test:
      imports:
        - pybind11
      commands:
        - test -f ${PREFIX}/share/cmake/pybind11/pybind11Config.cmake                                     # [unix]
        - if not exist %LIBRARY_PREFIX%\share\cmake\pybind11\pybind11Config.cmake exit 1      # [win]
        - test -f ${PREFIX}/include/pybind11/pybind11.h      # [unix]
        - if not exist %LIBRARY_INC%\pybind11\pybind11.h exit 1      # [win]
        - test -f $(python -c "import pybind11 as py; print(py.get_include())")/pybind11/pybind11.h      # [unix]
        - if not exist %SP_DIR%\pybind11\include\pybind11\pybind11.h exit 1      # [win]

about:
  home: https://github.com/pybind/pybind11/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Seamless operability between C++11 and Python
  doc_url: https://pybind11.readthedocs.io/

extra:
  feedstock-name: pybind11
  recipe-maintainers:
    - ax3l
    - SylvainCorlay
    - wjakob
    - henryiii
